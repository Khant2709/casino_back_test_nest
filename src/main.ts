import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { AppModule } from './app.module';
import helmet from 'helmet';
import rateLimit from 'express-rate-limit';
import slowDown from 'express-slow-down';
import cors from 'cors';
import * as express from 'express';
import * as fs from 'fs';
import * as path from 'path';

import { startMysql } from '@config/mysql';
import { PATH_LOGS, PORT } from '@constants/envData';

// –ü—É—Ç–∏ –¥–æ –ª–æ–≥–æ–≤ –¥–ª—è CORS –∏ rate-limit
const CORS_LOG_PATH = path.join(PATH_LOGS, 'cors_blocked.log');
const RATE_LIMIT_LOG_PATH = path.join(PATH_LOGS, 'ratelimit_blocked.log');

async function bootstrap() {
  // 1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–¥–æ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞)
  try {
    await startMysql();
  } catch (err) {
    console.error('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø—É—Å–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    process.exit(1); // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
  }

  // 2. –°–æ–∑–¥–∞–Ω–∏–µ Nest-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞ –±–∞–∑–µ Express)
  const app = await NestFactory.create(AppModule);

  // 3. –ü–æ–ª—É—á–∞–µ–º raw-–∏–Ω—Å—Ç–∞–Ω—Å Express –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ middleware –Ω–∞–ø—Ä—è–º—É—é
  const expressApp = app.getHttpAdapter().getInstance();

  // 4. –î–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞–º –ø—Ä–æ–∫—Å–∏ (–Ω—É–∂–Ω–æ, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ Nginx / Cloudflare –∏ —Ç.–¥.)
  expressApp.set('trust proxy', 1);

  // 5. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ HTTP-–∑–∞–≥–æ–ª–æ–≤–∫–∏
  expressApp.use(helmet());

  // 6. –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä JSON –∏ urlencoded —Ç–µ–ª (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å + –∑–∞—â–∏—Ç–∞ –æ—Ç DoS)
  expressApp.use(express.json({ limit: '1mb' }));
  expressApp.use(express.urlencoded({ extended: true, limit: '1mb' }));

  // 7. CORS-–ª–æ–≥–∏–∫–∞: –ª–æ–≥–∏—Ä—É–µ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã
  const allowedOrigins = [
    'https://clubnika-casino725.online',
    'https://www.clubnika-casino725.online',
  ];

  expressApp.use((req, res, next) => {
    const origin = req.headers.origin;
    if (origin && !allowedOrigins.includes(origin)) {
      const ip = req?.ip || req.headers['x-forwarded-for'] || req.socket.remoteAddress || 'unknown';
      const ua = req.headers['user-agent'] || 'unknown';
      const logMessage = `[${new Date().toISOString()}] Blocked CORS request\nOrigin: ${origin}\nIP: ${ip}\nUser-Agent: ${ua}\nURL: ${req.originalUrl}\n\n`;

      console.warn(logMessage);
      fs.appendFile(CORS_LOG_PATH, logMessage, () => {});
    }
    next();
  });

  // 8. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CORS (—Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π credentials)
  expressApp.use(
    cors({
      origin: (origin, callback) => {
        if (!origin || allowedOrigins.includes(origin)) {
          callback(null, true);
        } else {
          callback(new Error('Not allowed by CORS'));
        }
      },
      credentials: true,
    }),
  );

  // 9. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –æ–¥–Ω–æ–≥–æ IP (–∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞/–∞—Ç–∞–∫–∏)
  expressApp.use(
    rateLimit({
      windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
      max: 100, // –º–∞–∫—Å–∏–º—É–º 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è
      handler: (req, res) => {
        const ip = req?.ip || req.headers['x-forwarded-for'] || req.socket.remoteAddress || 'unknown';
        const logMessage = `[${new Date().toISOString()}] Rate limit exceeded\nIP: ${ip}\nURL: ${req.originalUrl}\n\n`;
        fs.appendFile(RATE_LIMIT_LOG_PATH, logMessage, () => {});
        console.log(`[RATE LIMIT BLOCKED] IP: ${ip}, URL: ${req.originalUrl}`);
        res.status(429).json({ message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.' });
      },
    }),
  );

  // 10. –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ —á–∞—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–æ—Å–ª–µ 50 ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∑–∞–¥–µ—Ä–∂–∫–∞)
  expressApp.use(
    slowDown({
      windowMs: 15 * 60 * 1000,
      delayAfter: 50,
      delayMs: () => 500, // –∫–∞–∂–¥—ã–µ —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –∑–∞–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –Ω–∞ 0.5 —Å–µ–∫
    }),
  );

  app.setGlobalPrefix('api');

  app.useGlobalPipes(new ValidationPipe({
    whitelist: true, // —É–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ DTO
    forbidNonWhitelisted: true, // –≤—ã–¥–∞—ë—Ç –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –ª–∏—à–Ω–∏–µ –ø–æ–ª—è
    transform: false, // –ø—Ä–∏–≤–æ–¥–∏—Ç —Ç–∏–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞)
  }));

  // 11. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É
  await app.listen(PORT);
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É: ${PORT}`);
}

bootstrap();
